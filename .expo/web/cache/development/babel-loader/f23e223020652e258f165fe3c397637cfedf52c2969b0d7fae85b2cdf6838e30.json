{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar fullWidth = Dimensions.get('window').width;\nexport default function CardTwo(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isCakeBlow = _useState2[0],\n    setCakeBlow = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showElement = _useState4[0],\n    setShowElement = _useState4[1];\n  useEffect(function () {\n    if (isCakeBlow) {\n      var timer = setTimeout(function () {\n        setShowElement(false);\n      }, 900);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [isCakeBlow]);\n  var CakeBlowHandler = function CakeBlowHandler() {\n    setCakeBlow(true);\n  };\n  return _jsxs(React.Fragment, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: props.onClick,\n      style: Styles.Cancel,\n      children: _jsx(Text, {\n        style: Styles.Cross,\n        children: \"X\"\n      })\n    }), isCakeBlow ? _jsxs(View, {\n      style: Styles.imgBox,\n      children: [_jsx(Image, {\n        source: require(\"./Two1.gif\"),\n        style: {\n          height: 160,\n          width: 100,\n          marginHorizontal: 20\n        }\n      }), _jsx(Image, {\n        source: require(\"./Two3.gif\"),\n        style: {\n          height: 150,\n          width: 170,\n          marginHorizontal: 20\n        }\n      })]\n    }) : _jsx(View, {\n      style: Styles.imgBox\n    }), _jsx(TouchableOpacity, {\n      onPress: CakeBlowHandler,\n      children: isCakeBlow ? showElement ? _jsx(Image, {\n        source: require(\"./cake2.gif\"),\n        style: {\n          height: 165,\n          width: 150,\n          alignSelf: \"center\"\n        }\n      }) : _jsx(Image, {\n        source: require(\"./cake3.gif\"),\n        style: {\n          height: 165,\n          width: 150,\n          alignSelf: \"center\"\n        }\n      }) : _jsx(Image, {\n        source: require(\"./cake1.gif\"),\n        style: {\n          height: 165,\n          width: 150,\n          alignSelf: \"center\"\n        }\n      })\n    }), _jsx(Text, {\n      style: {\n        alignSelf: \"center\",\n        fontSize: 20,\n        color: \"#ffff00\"\n      },\n      children: isCakeBlow ? \"ðŸ¥³ Happy Birthdayyy ðŸ¥³\" : \"$ Blow up the candles $\"\n    }), isCakeBlow ? _jsx(Image, {\n      source: require(\"./Two2.gif\"),\n      style: {\n        height: 250,\n        width: 200,\n        alignSelf: \"center\"\n      }\n    }) : _jsx(View, {})]\n  });\n}\nvar Styles = StyleSheet.create({\n  imgBox: {\n    width: fullWidth,\n    flexDirection: \"row\"\n  },\n  Cancel: {\n    backgroundColor: \"red\",\n    borderWidth: 3,\n    borderColor: \"white\",\n    height: 50,\n    width: 50,\n    marginTop: 30,\n    marginLeft: 10,\n    borderRadius: 10,\n    padding: 0\n  },\n  Cross: {\n    fontSize: 30,\n    alignSelf: \"center\",\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Dimensions","StyleSheet","TouchableOpacity","Image","Text","View","jsx","_jsx","jsxs","_jsxs","fullWidth","get","width","CardTwo","props","_useState","_useState2","_slicedToArray","isCakeBlow","setCakeBlow","_useState3","_useState4","showElement","setShowElement","timer","setTimeout","clearTimeout","CakeBlowHandler","Fragment","children","onPress","onClick","style","Styles","Cancel","Cross","imgBox","source","require","height","marginHorizontal","alignSelf","fontSize","color","create","flexDirection","backgroundColor","borderWidth","borderColor","marginTop","marginLeft","borderRadius","padding","fontWeight"],"sources":["/home/sumithraj05/react-app/Android-app-using-React-native/App/Index/Surprise/Message/CardTwo/CardTwo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Dimensions, StyleSheet, TouchableOpacity, Image, Text, View } from \"react-native\";\n\nconst fullWidth = Dimensions.get('window').width;\n\nexport default function CardTwo(props) {\n    const [isCakeBlow, setCakeBlow] = useState(false)\n    const [showElement, setShowElement] = useState(true);\n\n    useEffect(() => {\n        if (isCakeBlow) {\n            const timer = setTimeout(() => {\n                setShowElement(false);\n            }, 900);\n            return () => clearTimeout(timer);\n        }\n    }, [isCakeBlow]);\n\n    const CakeBlowHandler = () => {\n        setCakeBlow(true)\n    }\n\n    return (\n        <React.Fragment>\n            <TouchableOpacity\n                onPress={props.onClick}\n                style={Styles.Cancel}\n            >\n                <Text style={Styles.Cross}>X</Text>\n            </TouchableOpacity>\n            {(isCakeBlow) ?\n                <View style={Styles.imgBox}>\n                    <Image\n                        source={require(\"./Two1.gif\")}\n                        style={{\n                            height: 160,\n                            width: 100,\n                            marginHorizontal: 20\n                        }}\n                    />\n                    <Image\n                        source={require(\"./Two3.gif\")}\n                        style={{\n                            height: 150,\n                            width: 170,\n                            marginHorizontal: 20\n                        }}\n                    />\n                </View>\n                :\n                <View style={Styles.imgBox}></View>\n            }\n            <TouchableOpacity onPress={CakeBlowHandler}>\n                {\n                    (isCakeBlow) ?\n                        (showElement) ?\n                            <Image\n                                source={require(\"./cake2.gif\")}\n                                style={{\n                                    height: 165,\n                                    width: 150,\n                                    alignSelf: \"center\"\n                                }}\n                            />\n                            :\n                            <Image\n                                source={require(\"./cake3.gif\")}\n                                style={{\n                                    height: 165,\n                                    width: 150,\n                                    alignSelf: \"center\"\n                                }}\n                            />\n                        :\n                        <Image\n                            source={require(\"./cake1.gif\")}\n                            style={{\n                                height: 165,\n                                width: 150,\n                                alignSelf: \"center\"\n                            }}\n                        />\n\n                }\n            </TouchableOpacity>\n            <Text style={{\n                alignSelf: \"center\",\n                fontSize: 20,\n                color: \"#ffff00\"\n            }}\n            >\n                {\n                    (isCakeBlow) ?\n                        \"ðŸ¥³ Happy Birthdayyy ðŸ¥³\"\n                        :\n\n                        \"$ Blow up the candles $\"\n                }\n            </Text>\n            {(isCakeBlow) ?\n                <Image\n                    source={require(\"./Two2.gif\")}\n                    style={{\n                        height: 250,\n                        width: 200,\n                        alignSelf: \"center\"\n                    }}\n                />\n                :\n                <View></View>\n            }\n        </React.Fragment>\n    )\n}\n\nconst Styles = StyleSheet.create({\n    imgBox: {\n        width: fullWidth,\n        flexDirection: \"row\"\n    },\n    Cancel: {\n        backgroundColor: \"red\",\n        borderWidth: 3,\n        borderColor: \"white\",\n        height: 50,\n        width: 50,\n        marginTop: 30,\n        marginLeft: 10,\n        borderRadius: 10,\n        padding: 0\n    },\n    Cross: {\n        fontSize: 30,\n        alignSelf: \"center\",\n        color: \"white\",\n        fontWeight: \"bold\"\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}